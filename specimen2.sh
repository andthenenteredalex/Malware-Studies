#!/bin/bash
#
# for linux operating systems (written for Ubuntu)
# hand crafted by Alex Clark 3-10-2019
#
# see README.md for info on this project
#
#                 the specimen2 prompt:
#
#                 create a script that:
#
#               - determines the IP of the device it is running on 
#               - determines all subnet information: 
#                   - gateway
#                   - mask
#                   - broadcast
#                   - DNS server configuration -> need to add this
#                   - all other live hosts on subnet -> need to add this
#                   - current outbound connections -> need to add this
#               - organize this information into a clean file -> need to add this
#               - perform nslookup of google.com using 8.8.8.8 as a name server   -> need to add this
#               - write it all to a file on the desktop -> need to add this
#                           ^^ if written to the desktop, the file could be written anywhere. 
#                              the goal is to practice writing files to different directories without
#                              messing around in the more sensitive disk locations yet


NETWORK_INFO=`ifconfig | grep 'inet addr'`
GATEWAY=`ip route show | grep 'default via' | grep -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b"`
INTERFACE_NAMES=wlp3s0 # Currently rely on hardcoded interface name I know to be correct into the script. Working on this. See below.
SLASH=`ip route show | awk '/'"$INTERFACE_NAMES"'.*scope/ {print $1}' | grep -v '169.254.0.0/16'`
DETERMINE_INTERFACES=`ifconfig | grep Link | awk -F" " '{ print $1" "$10 }'`

# GREAT! But $SLASH relies on knowing the interface name. how to obtain interface name?

# finding interface name:
#
# makes an array of all interfaces:
declare -a arr=(`ifconfig | grep Link | awk -F" " '{ print $1" "$10 }'`)
# determines length of the array:
# echo ${#arr[@]}
# for loop through array, with if statement to check contents.

# need to replace this with ping.
# as currently coded, relies on nmap being installed.
SCAN=`nmap "$SLASH"` # only perform this on networks you own as this will scan the entire network your device is currently a part of



echo
echo default gateway $GATEWAY
echo
echo the subnet is $SLASH
echo
echo your interfaces are: $DETERMINE_INTERFACES

