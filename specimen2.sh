#!/bin/bash
#
# for linux operating systems (written for Ubuntu)
# hand crafted by Alex Clark 3-10-2019
#
# see README.md for info on this project
#
#                 the specimen2 prompt:
#
#                 create a script that:
#
#               - determines the IP of the device it is running on 
#               - determines all subnet information: 
#                   - gateway
#                   - mask
#                   - broadcast
#                   - DNS server configuration -> need to add this
#                   - all other live hosts on subnet
#               - organize this information into a clean file -> need to add this
#               - perform nslookup of google.com using 8.8.8.8 as a name server
#               - write it all to a file on the desktop -> need to add this
#                           ^^ if written to the desktop, the file could be written anywhere. 
#                              the goal is to practice writing files to different directories without
#                              messing around in the more sensitive disk locations yet

NAME_LOOKUP=`nslookup google.com 8.8.8.8`
NETWORK_INFO=`ifconfig | grep 'inet addr'` # might be used at a later time. I'm aware I'm not currently using this data
GATEWAY=`ip route show | grep 'default via' | grep -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b"` # returns gateway IP
CHECK_GATEWAY_CONNECTIVITY=`ping -c 2 $GATEWAY | grep "64" | head  -c2` # if connectivity is achieved, the result will be 64

if [ $CHECK_GATEWAY_CONNECTIVITY -eq 64 ]
then
    CONNECTIVITY_STATUS='Gateway is reachable'
else
    CONNECTIVITY_STATUS='Gateway is unreachable'
fi

DETERMINE_INTERFACES=`ifconfig | grep Link | awk -F" " '{ print $1" "$10 }'`
for i in "${DETERMINE_INTERFACES[@]}"
do
    SLASH=`ip route show | awk '/'"$INTERFACE_NAMES"'.*scope/ {print $1}' | grep -v '169.254.0.0/16'`
done

#determines all alive hosts on a subnet
# unfortunately, currently, this relies on me hardcoding the start and end Ips of my /28 home network.
# can pull this info (the49 and 62) from somewhere, which will be easier, the /28, or the ifconfig with broadcast IP? Is there a way to find the beginning?
#   Oh yes, we can subtract the number from the broadcast IP based on the /28 we found earlier, since we can'trely on the Gateway being anywhere in particular.
DETERMINE_LIVE_HOSTS=`for ip in $(seq 49 62); do ping -c 1 192.168.5.$ip; done | grep "64 bytes"`


# as currently coded, relies on nmap being installed. Maybe can use something more common, like telnet?
SCAN=`nmap "$SLASH"` # only perform this on networks you own as this will scan the entire network your device is currently a part of

echo
echo default gateway $GATEWAY
echo
echo $CONNECTIVITY_STATUS
#echo current IP, broadcast, mask
#echo $BCAST
echo
echo the subnet is $SLASH
echo
#if ping -c 2 192.168.5.49 ; then echo OK ; else echo KO ; fi
echo your interfaces are: $DETERMINE_INTERFACES
echo
echo Google is located at $NAME_LOOKUP
echo
echo These hosts are live: $DETERMINE_LIVE_HOSTS


